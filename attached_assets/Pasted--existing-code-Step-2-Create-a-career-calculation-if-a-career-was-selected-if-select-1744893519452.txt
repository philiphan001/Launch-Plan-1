// ... existing code ...

// Step 2: Create a career calculation if a career was selected
if (selectedCareerId && selectedProfession) {
  fetch(`/api/careers/${selectedCareerId}`)
    .then(res => res.json())
    .then(career => {
      // Use salary data from the career, with fallbacks
      const projectedSalary = career.salary || 50000;
      const entryLevelSalary = career.salary_pct_10 || projectedSalary * 0.8;
      const midCareerSalary = career.salary_pct_50 || projectedSalary * 1.5;
      const experiencedSalary = career.salary_pct_90 || projectedSalary * 2;

      // Create the career calculation
      const careerCalculation = {
        userId: user.id,
        careerId: selectedCareerId,
        projectedSalary: projectedSalary,
        entryLevelSalary: entryLevelSalary,
        midCareerSalary: midCareerSalary,
        experiencedSalary: experiencedSalary,
        education: 'direct_entry', // Since this is the "get a job" pathway
        additionalNotes: `Auto-generated from Pathways for ${selectedProfession}`,
        includedInProjection: true, // Auto-include in projection
        locationZip: selectedZipCode,
        adjustedForLocation: true // Since we have location data
      };

      console.log('Auto-generating career calculation:', careerCalculation);

      // Save the career calculation
      fetch('/api/career-calculations', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(careerCalculation),
      })
        .then(res => {
          if (!res.ok) {
            throw new Error('Failed to save career calculation');
          }
          return res.json();
        })
        .then(savedCalculation => {
          console.log('Career calculation saved:', savedCalculation);
        })
        .catch(err => {
          console.error('Error saving career calculation:', err);
        });
    })
    .catch(err => {
      console.error('Error fetching career data:', err);
    });
}

// Collect pathway data with enhanced location info
const pathwayDataForFinancialPlan = {
  selectedProfession,
  location: selectedLocation ? {
    zipCode: selectedZipCode,
    city: selectedLocation.city,
    state: selectedLocation.state
  } : null,
  userJourney: 'get_a_job',
  // Add these additional fields for better compatibility
  zipCode: selectedZipCode,
  selectedCareer: selectedCareerId
};

console.log("Storing enhanced pathway data for financial planning:", pathwayDataForFinancialPlan);
localStorage.setItem('pathwayData', JSON.stringify(pathwayDataForFinancialPlan));

// Redirect to the financial projections page with auto-generate flag
navigate('/projections?autoGenerate=true');

// ... existing code ...